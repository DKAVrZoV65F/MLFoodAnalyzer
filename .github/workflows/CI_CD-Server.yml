name: CI/CD Server ðŸ§ªðŸš€

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

env:
  DOTNET_NOLOGO: true                     # Disable the .NET logo
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience
  DOTNET_CLI_TELEMETRY_OPTOUT: true       # Disable sending .NET CLI telemetry
  DOTNET_VERSION: '8.0.x'                 # Version .NET


jobs:
  # CI-ubuntu:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4.1.1

  #   - name: Cache ðŸ“‚
  #     id: cache-setup
  #     #uses: action/cache@v4.0.1
  #     run: ls
      

  #   - name: Setup .NET ðŸ“¦
  #     uses: actions/setup-dotnet@v4.0.0
  #     with:
  #       dotnet-version: ${{ env.DOTNET_VERSION }}
        
  #   - name: Install dependencies ðŸ“‚
  #     run: |
  #       dotnet workload restore

  #   - name: Build ðŸ§±
  #     run: dotnet build -c Release --no-restore
      
  #   - name: Test ðŸ§ª
  #     run: dotnet test xU_Server -c Release --no-build --logger "trx;LogFileName=test-results-server-ubuntu.trx" || true

  #   - name: Publish Test Result ðŸš€
  #     uses: dorny/test-reporter@v1
  #     if: always()
  #     with:
  #       name: Report Tests Ubuntu
  #       path: "**/test-results-server-ubuntu.trx"
  #       reporter: dotnet-trx
  #       fail-on-error: false
        
  CI-windows:
    runs-on: windows-latest
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
    - uses: actions/checkout@v4.1.1

    - name: Setup .NET ðŸ“¦
      uses: actions/setup-dotnet@v4.0.0
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Install dependencies ðŸ“‚
      run: |
        dotnet workload restore
        dotnet restore
        ls
      
    - name: Build ðŸ§±
      run: dotnet build -c Release --no-restore
      
    - name: Test ðŸ§ª
      run: dotnet test xU_Server -c Release --no-build --logger "trx;LogFileName=test-results-server-windows.trx" || true

    - name: Publish Test Result ðŸš€
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Report Tests Windows
        path: "**/test-results-server-windows.trx"
        reporter: dotnet-trx
        fail-on-error: false

  # CI-macos:
  #   runs-on: macos-latest
  #   if: ${{ github.event.workflow_run.conclusion == 'success' }}
  #   steps:
  #   - uses: actions/checkout@v4.1.1

  #   - name: Setup .NET ðŸ“¦
  #     uses: actions/setup-dotnet@v4.0.0
  #     with:
  #       dotnet-version: ${{ env.DOTNET_VERSION }}
        
  #   - name: Install dependencies ðŸ“‚
  #     run: |
  #       dotnet restore
  #       dotnet workload restore

  #   - name: Build ðŸ§±
  #     run: dotnet build -c Release --no-restore
      
  #   - name: Test ðŸ§ª
  #     run: dotnet test xU_Server -c Release --no-build --logger "trx;LogFileName=test-results-server-macos.trx" || true

  #   - name: Publish Test Result ðŸš€
  #     uses: dorny/test-reporter@v1
  #     if: always()
  #     with:
  #       name: Report Tests Macos
  #       path: "**/test-results-server-macos.trx"
  #       reporter: dotnet-trx
  #       fail-on-error: false



        
