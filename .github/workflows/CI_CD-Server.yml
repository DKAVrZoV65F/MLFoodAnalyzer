name: CI/CD Server ðŸ§ªðŸš€

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

env:
  DOTNET_NOLOGO: true                     # Disable the .NET logo
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience
  DOTNET_CLI_TELEMETRY_OPTOUT: true       # Disable sending .NET CLI telemetry
  DOTNET_VERSION: '8.0.x'                 # Version .NET
  DOTNET_INSTALL_DIR: '.\.dotnet'
  DOTNET_DEPENDENCIES_DIR: '~/.nuget/packages'


jobs:
  CI:
    continue-on-error: false
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
      fail-fast: false
      max-parallel: 1
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4.1.1
    - name: Cache .NET ðŸ“¦
      id: cache-dotnet
      uses: actions/cache@v4.0.1
      with:
        path: ${{ env.DOTNET_INSTALL_DIR }}
        key: ${{ runner.os }}-dotnet-8
        restore-keys: ${{ runner.os }}-dotnet-8
        
    - name: Display Cache .NET ðŸ“¦
      run: echo '${{ toJSON(steps.cache-dotnet.outputs) }}'
    - name: Setup .NET ðŸ“¦
      if: ${{ steps.cache-dotnet.outputs.cache-hit != 'true' }}
      uses: actions/setup-dotnet@v4.0.0
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Set installed/cached dotnet path [${{ env.DOTNET_INSTALL_DIR }}] ðŸ’¾
      run: echo "${{ env.DOTNET_INSTALL_DIR }}" | Out-File -FilePath $ENV:GITHUB_PATH -Encoding utf8 -Append

    - name: Cache Dependencies ðŸ“‚
      id: cache-dependencies-server
      uses: actions/cache@v4.0.1
      with:
        path: ${{ env.DOTNET_DEPENDENCIES_DIR }}
        key: ${{ runner.os }}-dotnet-dependencies-server
        restore-keys: ${{ runner.os }}-dotnet-dependencies-server
    - name: Install Dependencies ðŸ“‚
      if: ${{ steps.cache-dependencies-server.outputs.cache-hit != 'true' }}
      run: |
        dotnet workload restore
        dotnet restore MLFoodAnalyzerServer/MLFoodAnalyzerServer.csproj
    - name: Set installed/cached dependencies path [${{ env.DOTNET_DEPENDENCIES_DIR }}] ðŸ’¾
      run: echo "${{ env.DOTNET_DEPENDENCIES_DIR }}" | Out-File -FilePath $ENV:GITHUB_PATH -Encoding utf8 -Append
        
    - name: Build ðŸ§±
      run: dotnet build
      
    - name: Test ðŸ§ª
      run: dotnet test xU_Server --logger "trx;LogFileName=test-results-server-{{ matrix.os }}.trx" || true

    - name: Publish Test Result ðŸš€
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Report Tests ðŸš€
        path: "**/test-results-server-{{ matrix.os }}.trx"
        reporter: dotnet-trx
        fail-on-error: true
