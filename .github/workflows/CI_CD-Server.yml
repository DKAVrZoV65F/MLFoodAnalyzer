name: CI/CD Server ðŸ§ªðŸš€

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

env:
  DOTNET_NOLOGO: true                     # Disable the .NET logo
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience
  DOTNET_CLI_TELEMETRY_OPTOUT: true       # Disable sending .NET CLI telemetry
  DOTNET_VERSION: '8.0.x'                 # Version .NET


jobs:
  CI:
    continue-on-error: false
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
      fail-fast: false
      max-parallel: 1
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4.1.1
    - name: Cache ðŸ“‚
      id: cache-step
      uses: action/cache@v4.0.1
      with:
        path: '.\.dotnet'
        key: ${{ runner.os }}-cache-file-${{ hashFiles(runner.os) }}
        restore-keys: ${{ runner.os }}-cache-file-${{ hashFiles(runner.os) }}
        
    - name: Display Cache
      run: echo '${{ toJSON(steps.cache-step.outputs) }}'
      
    - name: Setup .NET ðŸ“¦
      uses: actions/setup-dotnet@v4.0.0
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Install dependencies ðŸ“‚
      run: |
        dotnet workload restore
        dotnet restore MLFoodAnalyzerServer/MLFoodAnalyzerServer.csproj
      
    - name: Build ðŸ§±
      run: dotnet build -c Release --no-restore
      
    - name: Test ðŸ§ª
      run: dotnet test xU_Server -c Release --no-build --logger "trx;LogFileName=test-results-server-{{ matrix.os }}.trx" || true

    - name: Publish Test Result ðŸš€
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Report Tests Windows
        path: "**/test-results-server-{{ matrix.os }}.trx"
        reporter: dotnet-trx
        fail-on-error: true



        
