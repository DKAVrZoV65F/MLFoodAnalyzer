name: Build Client ðŸš€

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  pull_request:
    branches: [ "master" ]


concurrency:
  group: Build-Client-ðŸš€
  cancel-in-progress: true
jobs:
  Build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4.1.1
    - name: Setup .NET ðŸ“¦
      uses: actions/setup-dotnet@v4.0.0
      with:
        dotnet-version: '8.0.x'

    - name: Install Dependencies ðŸ“‚
      run: |
        cd Client
        dotnet workload install maui --ignore-failed-sources
        dotnet workload restore
        dotnet restore Client.csproj

    - name: Decrypt PFX File
      run: |
        echo "${{ secrets.WINDOWS_PFX_FILE }}" > cert.pfx.asc
        certutil -decode cert.pfx.asc cert.pfx

    - name: Add Cert to Store
      run: certutil -user -q -p ${{ secrets.WINDOWS_PFX_PASSWORD }} -importpfx cert.pfx NoRoot
      
    - name: Build ðŸ§± & Publish ðŸš€
      run: |
        dotnet build Client.csproj -f:net8.0-windows10.0.19041.0 -c Release 
        dotnet publish Client.csproj -f:net8.0-windows10.0.19041.0 -c Release /p:GenerateAppxPackageOnBuild=true /p:AppxPackageSigningEnabled=true /p:PackageCertificateThumbprint="${{ secrets.WINDOWS_PFX_THUMBPRINT }}"

    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v4.3.0
      with:
        name: windows-build
        path: .\**\AppPackages\**\*.*

# ********************************* #
# >>>>>>> MacCatalyst Build <<<<<<< #
# ********************************* #
  Build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4.1.1
    - name: Setup .NET
      uses: actions/setup-dotnet@v4.0.0
      with:
        dotnet-version: '8.0.x'

    - name: Install Dependencies ðŸ“‚
      shell: bash
      run: |
        cd Client
        dotnet workload install maui --ignore-failed-sources
        dotnet workload restore
        dotnet restore Client.csproj

    - name: Build ðŸ§± & Publish ðŸš€
      shell: bash
      run: |
        dotnet build Client.csproj -f:net8.0-maccatalyst -c Release -o ./artifacts
        dotnet publish Client.csproj -f:net8.0-maccatalyst -c Release -p:CreatePackage=True -o ./artifacts
    
    - name: Upload MacCatalyst Artifact
      uses: actions/upload-artifact@v4.3.0
      with:
        name: macos-build .app
        path: artifacts/Client.app/Contents/MacOS/*.pkg
    




# jobs:
# ***************************** #
# >>>>>>> Android build <<<<<<< #
# ***************************** #
  # CD-android:
  #   runs-on: windows-latest
    
  #   steps:
  #   - uses: actions/checkout@v4.1.1
    
  #   - name: Setup Keystore File
  #     run: |
  #       echo "${{ secrets.ANDROID_KEYSTORE_FILE }}" > myapp.keystore.asc
  #       gpg -d --passphrase "${{ secrets.ANDROID_PASSWORD_GPG }}" --batch myapp.keystore.asc > myapp.keystore

  #   - name: Setup .NET
  #     uses: actions/setup-dotnet@v4.0.0
  #     with:
  #       dotnet-version: '8.0.x'

  #   - name: Setup Java
  #     uses: actions/setup-java@v4.0.0
  #     with:
  #       distribution: 'microsoft'
  #       java-version: '11'
        
  #   - name: Install MAUI Workload
  #     run: dotnet workload install maui --ignore-failed-sources
      
  #   - name: Restore Dependencies
  #     run: dotnet restore MauiApp1/MauiApp1.csproj

  #   - name: Build MAUI Android
  #     run: dotnet publish MauiApp1/MauiApp1.csproj -f net8.0-android -c Release /p:AndroidSigningKeyStore=myapp.keystore /p:AndroidSigningKeyAlias=ghactionskey /p:AndroidSigningKeyPass="${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" /p:AndroidSigningStorePass="${{ secrets.ANDROID_PASSWORD_ALIAS }}" --no-restore

  #   - name: Upload Android Artifact
  #     uses: actions/upload-artifact@v4.3.0
  #     with:
  #       name: android-ci-build
  #       path: |
  #         ./**/*.aab
  #         ./**/*.apk


# ************************* #
# >>>>>>> iOS Build <<<<<<< #
# ************************* #
  # CD-ios:
  #   runs-on: macos-latest
  #   steps:
  #   - uses: actions/checkout@v4.1.1

  #   - name: Setup .NET
  #     uses: actions/setup-dotnet@v4.0.0
  #     with:
  #       dotnet-version: '8.0.x'
        
  #   - name: Install MAUI Workload
  #     run: dotnet workload install maui --ignore-failed-sources
    
  #   - name: Restore Dependencies
  #     run: dotnet restore MauiApp1/MauiApp1.csproj

  #   - name: Degub MAUI iOS project
  #     shell: bash
  #     run: dotnet build -f net8.0-ios -c Debug
  #   - name: Build MAUI iOS project
  #     shell: bash
  #     run: dotnet publish MauiApp1/MauiApp1.csproj -c Release -f:net8.0-ios  --no-restore /p:buildForSimulator=True /p:packageApp=True /p:ArchiveOnBuild=False
    
  #   - name: Upload Android Artifact
  #     uses: actions/upload-artifact@v4.3.0
  #     with:
  #       name: MauiApp1-ios-ci-build
  #       path: MauiApp1/bin/Release/net8.0-ios/iossimulator-x64/**/*.app
