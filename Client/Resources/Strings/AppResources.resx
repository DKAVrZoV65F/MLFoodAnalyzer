<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="." xml:space="preserve">
    <value>Not found</value>
  </data>
  <data name="Accept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="AcceptSettings" xml:space="preserve">
    <value>Accept settings</value>
  </data>
  <data name="Administration" xml:space="preserve">
    <value>Administration</value>
  </data>
  <data name="apple" xml:space="preserve">
    <value>Apple</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>MLFoodAnalyzer</value>
  </data>
  <data name="AttachedAPicture" xml:space="preserve">
    <value>The picture has been sent to the server, wait for the results </value>
  </data>
  <data name="AttachedAText" xml:space="preserve">
    <value>The text has been sent to the server, wait for the results.</value>
  </data>
  <data name="avocado" xml:space="preserve">
    <value>Avocado</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="banana" xml:space="preserve">
    <value>Banana</value>
  </data>
  <data name="beetroot" xml:space="preserve">
    <value>Beetroot</value>
  </data>
  <data name="Benefit" xml:space="preserve">
    <value>Benefit: </value>
  </data>
  <data name="cabbage" xml:space="preserve">
    <value>Cabbage</value>
  </data>
  <data name="carrot" xml:space="preserve">
    <value>Carrot</value>
  </data>
  <data name="ChatSettings" xml:space="preserve">
    <value>Chat Settings</value>
  </data>
  <data name="CheckTheConnection" xml:space="preserve">
    <value>Check the connection</value>
  </data>
  <data name="cucumber" xml:space="preserve">
    <value>Cucumber</value>
  </data>
  <data name="DarkTheme" xml:space="preserve">
    <value>Dark theme</value>
  </data>
  <data name="DefaultTheme" xml:space="preserve">
    <value>Default theme</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description:</value>
  </data>
  <data name="DescriptionPolicy" xml:space="preserve">
    <value>License Agreement
This License Agreement (the "Agreement") is a legal agreement between you and DKAVrZoV65F for the use of the ML Food Analyzer software (the "Software"). By using the Software, you agree to comply with the terms of this Agreement.
1. License grant
In accordance with the terms and conditions of this Agreement, DKAVrZoV65F grants you a non-exclusive, non-transferable license to use the Program for personal, non-commercial purposes.
2. Description of rights and restrictions
The software is licensed, not sold. You may not use, copy, modify, combine, publish, distribute, sell or transfer the Software or any derivative works based on the Software, except as expressly provided for in this Agreement.
3. Ownership
DKAVrZoV65F owns all rights, titles and interests in relation to the Program, including all copyrights, trademarks and other intellectual property rights.
4. Termination
This Agreement is valid until terminated by you or DKAVrZoV65F. You may terminate this Agreement at any time by destroying all copies of the Software in your possession or under your control.
5. Disclaimer of warranties
The Software is provided "as is" and without warranty of any kind, express or implied, including, but not limited to, implied warranties of merchantability and fitness for a particular purpose.
6. Limitation of liability
Under no circumstances will DKAVrZoV65F be liable for any direct, indirect, incidental, special, consequential or punitive damages, including, but not limited to, damages in connection with loss of profit, reputation, use, data or other intangible damages resulting from the use or inability to use the Program.
7. Governing legislation
This Agreement shall be governed by and interpreted in accordance with the law.
8. Completeness of the agreement
This Agreement constitutes the entire agreement between you and [Licensor's Name] and supersedes all previous agreements and arrangements, regardless of whether they were concluded in writing
This program is purely for informational purposes.</value>
  </data>
  <data name="DestinationHostUn" xml:space="preserve">
    <value>Destination Host Unreachable</value>
  </data>
  <data name="eggplant" xml:space="preserve">
    <value>Eggplant</value>
  </data>
  <data name="EnterTheIp" xml:space="preserve">
    <value>Enter the IP address</value>
  </data>
  <data name="EnterThePassword" xml:space="preserve">
    <value>Enter the password</value>
  </data>
  <data name="EnterThePort" xml:space="preserve">
    <value>Enter the port</value>
  </data>
  <data name="EnterTheText" xml:space="preserve">
    <value>Enter the text</value>
  </data>
  <data name="EnterTheUserName" xml:space="preserve">
    <value>Enter your username</value>
  </data>
  <data name="ErrorConToServ" xml:space="preserve">
    <value>Error connecting to the server!</value>
  </data>
  <data name="ErrorLogIn" xml:space="preserve">
    <value>The entered username or password is incorrect</value>
  </data>
  <data name="ErrorUpdateDescr" xml:space="preserve">
    <value>The description has not been updated</value>
  </data>
  <data name="ErrorWithIPOrPort" xml:space="preserve">
    <value>Error With IP or port</value>
  </data>
  <data name="ExampleText" xml:space="preserve">
    <value>Cleaning robots using artificial intelligence can automatically identify and remove garbage, which greatly simplifies the cleaning process and reduces the likelihood of environmental pollution.</value>
  </data>
  <data name="feijoa" xml:space="preserve">
    <value>Feijoa</value>
  </data>
  <data name="figs" xml:space="preserve">
    <value>Figs</value>
  </data>
  <data name="For" xml:space="preserve">
    <value>for</value>
  </data>
  <data name="Gallery" xml:space="preserve">
    <value>Gallery</value>
  </data>
  <data name="grape" xml:space="preserve">
    <value>Grape</value>
  </data>
  <data name="Harm" xml:space="preserve">
    <value>Harm: </value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="IPAddress" xml:space="preserve">
    <value>IP address:</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LightTheme" xml:space="preserve">
    <value>Light theme</value>
  </data>
  <data name="LimitImage" xml:space="preserve">
    <value>The image must not exceed 8MB! You are uploading a picture with the size </value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="Mail" xml:space="preserve">
    <value>Mail</value>
  </data>
  <data name="MailMessage" xml:space="preserve">
    <value>The email address has been copied to the clipboard.</value>
  </data>
  <data name="MainPage" xml:space="preserve">
    <value>MainPage</value>
  </data>
  <data name="MLModel" xml:space="preserve">
    <value>MLModel</value>
  </data>
  <data name="Network" xml:space="preserve">
    <value>Network</value>
  </data>
  <data name="NoResults" xml:space="preserve">
    <value>No results</value>
  </data>
  <data name="orange" xml:space="preserve">
    <value>Orange</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password:</value>
  </data>
  <data name="pear" xml:space="preserve">
    <value>Pear</value>
  </data>
  <data name="persimmon" xml:space="preserve">
    <value>Persimmon</value>
  </data>
  <data name="PleaseWait" xml:space="preserve">
    <value>Please wait...</value>
  </data>
  <data name="Policy" xml:space="preserve">
    <value>Privacy policy</value>
  </data>
  <data name="PolicyAccept" xml:space="preserve">
    <value>I read policy</value>
  </data>
  <data name="Port" xml:space="preserve">
    <value>Port:</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="PSWDServer" xml:space="preserve">
    <value>The password for the server is saved</value>
  </data>
  <data name="pumpkin" xml:space="preserve">
    <value>Pumpkin</value>
  </data>
  <data name="ReloadApp" xml:space="preserve">
    <value>Please restart the application for the changes to take effect.</value>
  </data>
  <data name="sapodilla" xml:space="preserve">
    <value>Sapodilla</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SaveLogin" xml:space="preserve">
    <value>Save the login?</value>
  </data>
  <data name="SavePSWD" xml:space="preserve">
    <value>Save the password</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SelectAnAction" xml:space="preserve">
    <value>Select an action</value>
  </data>
  <data name="SendPicture" xml:space="preserve">
    <value>Send picture</value>
  </data>
  <data name="SendText" xml:space="preserve">
    <value>Send text</value>
  </data>
  <data name="Server" xml:space="preserve">
    <value>Server: </value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="SuccessUpdateDescr" xml:space="preserve">
    <value>Description has been successfully updated</value>
  </data>
  <data name="TakeAPicture" xml:space="preserve">
    <value>Take a picture</value>
  </data>
  <data name="tangerine" xml:space="preserve">
    <value>Tangerine</value>
  </data>
  <data name="TipChat" xml:space="preserve">
    <value>Chat, communication with the server</value>
  </data>
  <data name="TipDisplayPassword" xml:space="preserve">
    <value>Displays the password you entered</value>
  </data>
  <data name="TipLogIn" xml:space="preserve">
    <value>Enter your username to which your account was registered</value>
  </data>
  <data name="TipPassword" xml:space="preserve">
    <value>Enter your password that you entered during registration</value>
  </data>
  <data name="TipPasswordServer" xml:space="preserve">
    <value>On some servers, you need to specify a password to encrypt the text</value>
  </data>
  <data name="TipSaveLogIn" xml:space="preserve">
    <value>Saves your username and password on your device</value>
  </data>
  <data name="TipWriteOrPickImg" xml:space="preserve">
    <value>Enter a request or attach an image</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title:</value>
  </data>
  <data name="tomato" xml:space="preserve">
    <value>Tomato</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="ViewThePassword" xml:space="preserve">
    <value>View the password?</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome!</value>
  </data>
</root>